{"version":3,"file":"static/js/294.23ec0008.chunk.js","mappings":"yMACA,EAAmC,gCAAnC,EAA8E,wBAA9E,EAAqH,4BAArH,EAAwJ,oBAAxJ,EAAkM,mCAAlM,EAAwP,gC,2DCmDlPA,GAAiBC,EAAAA,EAAAA,GAAU,CAAEC,KAAM,SAAlBD,EA1CL,SAACE,GACf,OACI,iBAAMC,SAAUD,EAAME,aAAa,UAC/B,iBAAKC,UAAWC,EAAoB,WAChC,4BACI,0BACI,SAACC,EAAA,EAAK,CAACF,UAAWC,EACdE,YAAa,iCACbC,KAAM,QACNC,UAAWC,EAAAA,EACXC,SAAU,CAACC,EAAAA,QAEnB,0BACI,SAACN,EAAA,EAAK,CAACF,UAAWC,EACdQ,KAAK,WACLN,YAAa,uCACbC,KAAM,WACNC,UAAWC,EAAAA,EACXC,SAAU,CAACC,EAAAA,QAEnB,iBAAKR,UAAWC,EAAuB,WACnC,SAACC,EAAA,EAAK,CAACF,UAAWC,EAAqBQ,KAAM,WAAYL,KAAM,aAAcC,UAAWC,EAAAA,KACxF,6HAEHT,EAAMa,QAAS,gBAAKV,UAAWW,EAAAA,EAAAA,iBAAwB,SACnDd,EAAMa,SAGX,0BACI,mBAAQV,UAAWC,EAAgB,kDAG3C,iBAAKD,UAAWC,EAAY,WACxB,2VACA,gBAAKW,MAAO,CAACC,SAAU,OAAQC,WAAY,OAAO,wCAClD,gBAAKF,MAAO,CAACC,SAAU,OAAQC,WAAY,OAAO,mCAKtE,IAyBA,GAAeC,EAAAA,EAAAA,KAJS,SAACC,GAAK,MAAM,CAChCC,OAAQD,EAAME,KAAKD,OACtB,GAEuC,CAAEE,MAAAA,EAAAA,IAA1C,EArBc,SAACtB,GAKX,OAAIA,EAAMoB,QACC,SAAC,KAAQ,CAACG,GAAG,cAIpB,4BACI,4DACA,SAAC1B,EAAc,CAACI,SAXP,SAACuB,GACdxB,EAAMsB,MAAME,EAASC,MAAOD,EAASE,SAAUF,EAASG,WAC5D,MAYJ,G","sources":["webpack://redux_project/./src/components/Login/Login.module.css?3530","components/Login/Login.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"login__container\":\"Login_login__container__uTywi\",\"testData\":\"Login_testData__6kzqr\",\"submitButton\":\"Login_submitButton__EXkJQ\",\"form\":\"Login_form__NOLap\",\"rememberMeContainer\":\"Login_rememberMeContainer__uikFT\",\"buttonRememberMe\":\"Login_buttonRememberMe__Axsrb\"};","import React from \"react\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { Input } from \"../../UI/FormsControl/FormsControl\";\r\nimport cl from './Login.module.css';\r\nimport styles from '../../UI/FormsControl/FormsControl.module.css';\r\nimport { required } from '../../utils/validators/validators';\r\nimport { connect } from 'react-redux';\r\nimport { login } from \"../../redux/auth-reducer\";\r\nimport { Navigate } from \"react-router-dom\";\r\n\r\nconst LoginForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div className={cl.login__container}>\r\n                <div>\r\n                    <div>\r\n                        <Field className={cl.form}\r\n                            placeholder={\"Емейл\"}\r\n                            name={'email'}\r\n                            component={Input}\r\n                            validate={[required]} />\r\n                    </div>\r\n                    <div>\r\n                        <Field className={cl.form}\r\n                            type='password'\r\n                            placeholder={\"Пароль\"}\r\n                            name={'password'}\r\n                            component={Input}\r\n                            validate={[required]} />\r\n                    </div>\r\n                    <div className={cl.rememberMeContainer}>\r\n                        <Field className={cl.buttonRememberMe} type={'checkbox'} name={'rememberMe'} component={Input} />\r\n                        <div>Запомнить пароль?</div>\r\n                    </div>\r\n                    {props.error && <div className={styles.formSummaryError}>\r\n                        {props.error}\r\n                    </div>\r\n                    }\r\n                    <div>\r\n                        <button className={cl.submitButton}>Войти</button>\r\n                    </div>\r\n                </div>\r\n                <div className={cl.testData}>\r\n                    <div>Можете использовать эти тестовые данные, для входа в аккаунт:</div>\r\n                    <div style={{fontSize: '20px', fontWeight: '700'}}>Email: free@samuraijs.com</div>\r\n                    <div style={{fontSize: '20px', fontWeight: '700'}}>Password: free</div>\r\n                </div>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({ form: 'login' })(LoginForm)\r\n\r\nconst Login = (props) => {\r\n    const onSubmit = (formData) => {\r\n        props.login(formData.email, formData.password, formData.rememberMe)\r\n    }\r\n\r\n    if (props.isAuth) {\r\n        return <Navigate to='/profile' />\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>Войти</h1>\r\n            <LoginReduxForm onSubmit={onSubmit} />\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n})\r\n\r\nexport default connect(mapStateToProps, { login })(Login);"],"names":["LoginReduxForm","reduxForm","form","props","onSubmit","handleSubmit","className","cl","Field","placeholder","name","component","Input","validate","required","type","error","styles","style","fontSize","fontWeight","connect","state","isAuth","auth","login","to","formData","email","password","rememberMe"],"sourceRoot":""}